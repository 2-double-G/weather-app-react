{"version":3,"sources":["containers/WeatherToday/WeatherToday.css","containers/WeatherHourly/WeatherHourly.css","containers/WeatherWeekly/WeatherWeekly.css","components/Navigation/MenuIcon/MenuIcon.css","components/Navigation/Menu/Menu.css","containers/GetWeather/GetWeather.css","components/UI/Input/Input.css","components/UI/Loader/Loader.css","hoc/Layout/Layout.css","components/Navigation/Links/Links.css","containers/Main/Main.css","components/UI/Button/Button.css","components/Navigation/MenuIcon/MenuIcon.jsx","components/Navigation/Links/Links.jsx","components/Navigation/Menu/Menu.jsx","hoc/Layout/Layout.jsx","components/UI/Input/Input.jsx","components/UI/Button/Button.jsx","actions/actionTypes.js","actions/weather.js","containers/GetWeather/GetWeather.jsx","containers/Main/Main.jsx","components/UI/Loader/Loader.jsx","containers/WeatherToday/WeatherToday.jsx","hoc/Auxiliary/Auxiliary.jsx","containers/WeatherHourly/WeatherHourly.jsx","actions/filter.js","containers/WeatherWeekly/WeatherWeekly.jsx","App.js","registerServiceWorker.js","reducers/weather.js","reducers/filter.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","MenuIcon","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","links","to","label","exact","Links","map","link","index","key","this","renderLinks","Component","Menu","clickHandler","onCLose","close","Layout","state","menu","menuClickHandler","setState","children","onCloseMenuHandler","bind","isInvalid","valid","touched","Input","htmlFor","invalid","type","name","value","onChange","errorMessage","Button","disabled","FETCH_WEATHER_START","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_ERROR","FETCH_WEATHER_HOURLY_START","FETCH_WEATHER_HOURLY_SUCCESS","FETCH_WEATHER_HOURLY_ERROR","FILTER_HOURLY_WEATHER","FETCH_WEATHER_WEEKLY_START","FETCH_WEATHER_WEEKLY_SUCCESS","FETCH_WEATHER_WEEKLY_ERROR","storeCityName","city","console","log","localStorage","getItem","setItem","findPropertyValueByKey","obj","searchItem","result","hasOwnProperty","is","object","innerObj","getWeatherObject","data","keys","newObj","forEach","fetchTodayWeather","dispatch","a","fetchWeatherStart","localCityName","fetch","response","json","cod","Error","prepareData","JSON","stringify","lat","lon","timezone","fetchWeatherSuccess","fetchWeatherError","message","weather","error","fetchWeatherHourlyStart","fetchWeatherHourlySuccess","weatherHourly","fetchWeatherHourlyError","fetchWeatherWeeklyStart","fetchWeatherWeeklySuccess","weatherWeekly","fetchWeatherWeeklyError","GetWeather","isFormValid","inputControl","validation","minLength","required","onFormSubmit","event","preventDefault","handleInputChange","target","getWeather","isValid","trim","length","onSubmit","SearchForm","renderInput","renderButton","connect","Main","weatherToday","isError","Loader","center","WeatherToday","showDate","dateTime","myShift","Date","getTimezoneOffset","toLocaleDateString","year","month","day","date","dt","conditionIcon","src","icon","alt","condition","main","current","Math","round","temp","realFeels","feels_like","MaxMin","temp_max","temp_min","loading","renderTodayWeather","Auxiliary","btn","id","WeatherHourly","cityShift","hour","split","fetchHourlyWeather","item","changeFilter","activFilter","WeatherHourly__item","word","toUpperCase","slice","filterButtons","renderButtons","cityName","showCityName","renderHourly","filter","coordinates","parse","hourly","WeatherWeekly","weekday","fetchWeeklyWeather","WeatherWeekly__item","max","min","description","renderWeekly","daily","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialState","checkExisting","weatherReducer","action","initilaState","filterReducer","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.961f095c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherToday\":\"WeatherToday__WeatherToday--2oT2v\",\"current\":\"WeatherToday__current--ScwKL\",\"MaxMin\":\"WeatherToday__MaxMin--lmhfA\",\"city\":\"WeatherToday__city--1Dc8y\",\"date\":\"WeatherToday__date--32A5K\",\"condition\":\"WeatherToday__condition--3HKZg\",\"conditionIcon\":\"WeatherToday__conditionIcon--koi-u\",\"realFeels\":\"WeatherToday__realFeels--8GWgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherHourly\":\"WeatherHourly__WeatherHourly--1isnR\",\"WeatherHourly__item\":\"WeatherHourly__WeatherHourly__item--1NBvx\",\"filterButtons\":\"WeatherHourly__filterButtons--NNuUB\",\"cityName\":\"WeatherHourly__cityName--1g0nI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherWeekly\":\"WeatherWeekly__WeatherWeekly--NxhJD\",\"WeatherWeekly__item\":\"WeatherWeekly__WeatherWeekly__item--2wg1p\",\"description\":\"WeatherWeekly__description--10yVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuIcon\":\"MenuIcon__MenuIcon--10K6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu__Menu--3yNfz\",\"close\":\"Menu__close--4PUeo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GetWeather\":\"GetWeather__GetWeather--1aJrP\",\"SearchForm\":\"GetWeather__SearchForm--1MY8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--2JD9x\",\"invalid\":\"Input__invalid--2PJ1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader__Loader--7CH6c\",\"lds-dual-ring\":\"Loader__lds-dual-ring--1q2wY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2wiTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Links\":\"Links__Links--2rB1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main__Main--1n1Il\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--3bi60\"};","import React from 'react';\r\nimport classes from './MenuIcon.css';\r\n\r\nconst MenuIcon = (props) => {\r\n    const cls = [\r\n        classes.MenuIcon,\r\n        'fas'\r\n    ];\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times');\r\n        cls.push(classes.open);\r\n    } else {\r\n        cls.push('fa-bars');\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuIcon;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './Links.css';\r\n\r\nconst links = [\r\n    { to: '/today', label: 'Today', exact: false },\r\n    { to: '/hourly', label: 'Hourly', exact: false },\r\n    { to: '/weekly', label: 'Weekly', exact: false },\r\n];\r\n\r\nclass Links extends Component {\r\n\r\n    renderLinks() {\r\n        return (\r\n            links.map((link, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        <NavLink\r\n                            to={link.to}\r\n                            exact={link.exact}\r\n                        >\r\n                            {link.label}\r\n                        </NavLink>\r\n                    </li>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className={classes.Links}>\r\n                <ul>\r\n                    {this.renderLinks()}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Links;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Navigation from '../Links/Links';\r\nimport classes from './Menu.css'\r\n\r\nconst links = [\r\n    { to: '/', label: 'Search weather', exact: true },\r\n    { to: '/today', label: 'Today', exact: false },\r\n    { to: '/hourly', label: 'Hourly', exact: false },\r\n    { to: '/weekly', label: 'Weekly', exact: false },\r\n];\r\n\r\nclass Menu extends Component {\r\n\r\n    clickHandler = () => {\r\n        this.props.onCLose()\r\n    }\r\n    \r\n      renderLinks() {\r\n        return links.map((link, index) => {\r\n          return (\r\n            <li key={index}>\r\n              <NavLink\r\n                to={link.to}\r\n                exact={link.exact}\r\n                onClick={this.clickHandler}\r\n              >\r\n                {link.label}\r\n              </NavLink>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n\r\n    render() {\r\n        const cls = [classes.Menu];\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close);\r\n        }\r\n\r\n        return (\r\n            <div className={cls.join(' ')}>\r\n                <nav>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport classes from './Layout.css';\r\nimport MenuIcon from '../../components/Navigation/MenuIcon/MenuIcon';\r\nimport Menu from './../../components/Navigation/Menu/Menu';\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    menuClickHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    onCloseMenuHandler () {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>     \r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n                <Menu\r\n                    isOpen={this.state.menu}\r\n                    onCLose={this.onCloseMenuHandler.bind(this)}\r\n                />\r\n                <MenuIcon\r\n                    isOpen={this.state.menu}\r\n                    onToggle={this.menuClickHandler}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nfunction isInvalid({ valid, touched }) {\r\n    return !valid && touched;\r\n}\r\n\r\nconst Input = (props) => {\r\n    const htmlFor = 'input-city';\r\n    const cls = [classes.Input];\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid);\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{ props.label }</label>\r\n            <input\r\n                type=\"text\"\r\n                name={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {\r\n                isInvalid(props)\r\n                    ? <span>{props.errorMessage}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport classes from './Button.css';\r\n\r\nconst Button = (props) => (\r\n    <button\r\n        className={classes.Button}\r\n        disabled={props.disabled}\r\n        onClick={props.onClick}\r\n    >\r\n        {props.children}\r\n    </button>\r\n)\r\n\r\nexport default Button;","export const FETCH_WEATHER_START = 'FETCH_WEATHER_START';\r\nexport const FETCH_WEATHER_SUCCESS = 'FETCH_WEATHER_SUCCESS';\r\nexport const FETCH_WEATHER_ERROR = 'FETCH_WEATHER_ERROR';\r\n\r\nexport const FETCH_WEATHER_HOURLY_START = 'FETCH_WEATHER_HOURLY_START';\r\nexport const FETCH_WEATHER_HOURLY_SUCCESS = 'FETCH_WEATHER_HOURLY_SUCCESS';\r\nexport const FETCH_WEATHER_HOURLY_ERROR = 'FETCH_WEATHER_HOURLY_ERROR';\r\n\r\nexport const FILTER_HOURLY_WEATHER = 'FILTER_HOURLY_WEATHER';\r\n\r\nexport const FETCH_WEATHER_WEEKLY_START = 'FETCH_WEATHER_WEEKLY_START';\r\nexport const FETCH_WEATHER_WEEKLY_SUCCESS = 'FETCH_WEATHER_WEEKLY_SUCCESS';\r\nexport const FETCH_WEATHER_WEEKLY_ERROR = 'FETCH_WEATHER_WEEKLY_ERROR';\r\n\r\n","import {\r\n    FETCH_WEATHER_START,\r\n    FETCH_WEATHER_SUCCESS,\r\n    FETCH_WEATHER_ERROR,\r\n    FETCH_WEATHER_HOURLY_SUCCESS,\r\n    FETCH_WEATHER_HOURLY_ERROR,\r\n    FETCH_WEATHER_HOURLY_START,\r\n    FETCH_WEATHER_WEEKLY_START,\r\n    FETCH_WEATHER_WEEKLY_SUCCESS,\r\n    FETCH_WEATHER_WEEKLY_ERROR\r\n\r\n} from './actionTypes';\r\n\r\nimport is from 'is_js';\r\n\r\n\r\nconst storeCityName = city => {\r\n    if (city === null) {\r\n        console.log('City was null. Get city name from local storage');\r\n        return localStorage.getItem('city');\r\n    } else {\r\n        console.log('City was not null. Set new city name in local storage');\r\n        localStorage.setItem('city', city);\r\n        return city;\r\n    }\r\n}\r\n\r\nconst findPropertyValueByKey = (obj, searchItem) => {\r\n    let result = null;\r\n\r\n    for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            if (key === searchItem) {\r\n                result = obj[key];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (is.object(obj[key])) {\r\n            let innerObj = findPropertyValueByKey(obj[key], searchItem);\r\n\r\n            if (innerObj) {\r\n                result = innerObj;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nconst getWeatherObject = (data, keys) => {\r\n    const newObj = {};\r\n\r\n    keys.forEach(searchItem => {\r\n        newObj[searchItem] = findPropertyValueByKey(data, searchItem);\r\n    });\r\n\r\n    return newObj;\r\n}\r\n\r\nexport const fetchTodayWeather = city => {\r\n    return async dispatch => {\r\n\r\n        dispatch(fetchWeatherStart(city));\r\n        const localCityName = storeCityName(city);\r\n\r\n        try {          \r\n            const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${localCityName}&appid=4248d412b7d3efc097f20f1640cf0f2d&units=metric`);\r\n            const data = await response.json();\r\n\r\n            if (data.cod === '404') throw new Error(`City not found`);\r\n\r\n            const keys = ['name', 'dt', 'timezone', 'feels_like', 'temp', 'temp_max', 'temp_min', 'main', 'icon', 'lat', 'lon'];\r\n\r\n            const prepareData = getWeatherObject(data, keys);\r\n\r\n            localStorage.setItem('coordinates', JSON.stringify({\r\n                lat: prepareData.lat,\r\n                lon: prepareData.lon\r\n            }));\r\n            localStorage.setItem('timezone', prepareData.timezone);\r\n            localStorage.setItem('isError', false);\r\n            \r\n            dispatch(fetchWeatherSuccess(prepareData));\r\n        } catch (error) {\r\n            localStorage.setItem('isError', true);\r\n            dispatch(fetchWeatherError(error.message));          \r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchWeatherStart = city => {\r\n    return {\r\n        type: FETCH_WEATHER_START,\r\n        city\r\n    }\r\n}\r\n\r\nexport const fetchWeatherSuccess = weather => {\r\n    return {\r\n        type: FETCH_WEATHER_SUCCESS,\r\n        weather\r\n    }\r\n}\r\n\r\nexport const fetchWeatherError= error => {\r\n    return {\r\n        type: FETCH_WEATHER_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nexport const fetchHourlyWeather = () => {\r\n    return async dispatch => {\r\n        \r\n        dispatch(fetchWeatherHourlyStart());\r\n\r\n        const coordinates = JSON.parse(localStorage.getItem('coordinates'));\r\n\r\n        const lon = coordinates.lon,\r\n              lat = coordinates.lat;\r\n        \r\n        const isError = JSON.parse(localStorage.getItem('isError'));\r\n        \r\n        try {          \r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=daily&units=metric&appid=4248d412b7d3efc097f20f1640cf0f2d`);\r\n            const data = await response.json();\r\n\r\n            console.log(data);\r\n            if (data.cod === '404' || isError) throw new Error(`City not found`);\r\n                \r\n            const keys = ['dt', 'icon', 'temp'];\r\n            \r\n            const prepareData = data.hourly.map(item => {\r\n                return getWeatherObject(item, keys);\r\n            })\r\n\r\n            const timezone = JSON.parse(localStorage.getItem('timezone'));\r\n\r\n            dispatch(fetchWeatherHourlySuccess(prepareData, timezone));\r\n        } catch (error) {\r\n            dispatch(fetchWeatherHourlyError(error.message));          \r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchWeatherHourlyStart = () => {\r\n    return {\r\n        type: FETCH_WEATHER_HOURLY_START\r\n    }\r\n}\r\n\r\nexport const fetchWeatherHourlySuccess = (weatherHourly, timezone) => {\r\n    return {\r\n        type: FETCH_WEATHER_HOURLY_SUCCESS,\r\n        weatherHourly,\r\n        timezone\r\n    }\r\n}\r\n\r\nexport const fetchWeatherHourlyError = error => {\r\n    return {\r\n        type: FETCH_WEATHER_HOURLY_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nexport const fetchWeeklyWeather = () => {\r\n    return async dispatch => {\r\n        \r\n        dispatch(fetchWeatherWeeklyStart());\r\n\r\n        const coordinates = JSON.parse(localStorage.getItem('coordinates'));\r\n\r\n        const lon = coordinates.lon,\r\n              lat = coordinates.lat;\r\n        \r\n        const isError = JSON.parse(localStorage.getItem('isError'));\r\n               \r\n        try {          \r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=alerts&units=metric&appid=4248d412b7d3efc097f20f1640cf0f2d`);\r\n            const data = await response.json();\r\n\r\n            if (data.cod === '404' || isError) throw new Error(`City not found`);\r\n            \r\n            const keys = ['dt', 'icon', 'max', 'min'];\r\n            \r\n            const prepareData = data.daily.map(item => {\r\n                return getWeatherObject(item, keys);\r\n            })\r\n\r\n            const timezone = JSON.parse(localStorage.getItem('timezone'));\r\n\r\n            dispatch(fetchWeatherWeeklySuccess(prepareData, timezone));\r\n        } catch (error) {\r\n            dispatch(fetchWeatherWeeklyError(error.message));          \r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchWeatherWeeklyStart = () => {\r\n    return {\r\n        type: FETCH_WEATHER_WEEKLY_START\r\n    }\r\n}\r\n\r\nexport const fetchWeatherWeeklySuccess = (weatherWeekly, timezone) => {\r\n    return {\r\n        type: FETCH_WEATHER_WEEKLY_SUCCESS,\r\n        weatherWeekly,\r\n        timezone\r\n    }\r\n}\r\n\r\nexport const fetchWeatherWeeklyError = error => {\r\n    return {\r\n        type: FETCH_WEATHER_WEEKLY_ERROR,\r\n        error\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './GetWeather.css';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport { fetchTodayWeather } from '../../actions/weather';\r\n\r\nclass GetWeather extends Component {\r\n    state = {\r\n        isFormValid: false,\r\n        inputControl: {\r\n            value: '',\r\n            label: 'City',\r\n            errorMessage: 'Enter the city name correctly',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n                minLength: 1,\r\n                required: true\r\n            }\r\n        }\r\n    }\r\n\r\n    validation(value, validation) {\r\n        if (!validation) return true;\r\n\r\n        let isValid = true;\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n \r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid;\r\n        }\r\n      \r\n        return isValid;\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const inputControl = { ...this.state.inputControl };\r\n        \r\n        inputControl.value = event.target.value;\r\n        inputControl.touched = true;\r\n        inputControl.valid = this.validation(inputControl.value, inputControl.validation);\r\n\r\n        const isFormValid = inputControl.valid;\r\n\r\n        this.setState({\r\n            isFormValid,\r\n            inputControl\r\n        });\r\n    }\r\n\r\n    getWeather = () => {\r\n        if (this.state.isFormValid) {\r\n            this.props.fetchTodayWeather(this.state.inputControl.value);\r\n        }\r\n    }\r\n\r\n    renderInput() {\r\n        const inputControl = { ...this.state.inputControl };\r\n\r\n        return (\r\n            <Input\r\n                value={inputControl.value}\r\n                label={inputControl.label}\r\n                valid={inputControl.valid}\r\n                touched={inputControl.touched}\r\n                errorMessage={inputControl.errorMessage}\r\n                onChange={this.handleInputChange}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderButton() {\r\n        return (\r\n            <Button\r\n                disabled={!this.state.isFormValid}\r\n                onClick={this.getWeather}\r\n            >\r\n                Get weather\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.GetWeather}>\r\n                <h1>Search weather</h1>\r\n                <form onSubmit={this.onFormSubmit} className={classes.SearchForm}>\r\n                    {this.renderInput()}\r\n                    {this.renderButton()}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchTodayWeather: city => dispatch(fetchTodayWeather(city))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(GetWeather);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './Main.css';\r\nimport GetWeather from './../GetWeather/GetWeather';\r\nimport Navigation from '../../components/Navigation/Links/Links';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n                <div className={classes.Main}>\r\n                <GetWeather />\r\n                { \r\n                    !this.props.touched\r\n                        ? null\r\n                        : !this.props.error\r\n                            ? <Navigation />\r\n                            : <p>Sorry, man. You are wrong.</p>\r\n                }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        touched: state.weatherToday.touched,\r\n        error: state.weatherToday.error.isError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);","import React from 'react';\r\nimport classes from './Loader.css'\r\n\r\nconst Loader = () => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}></div>\r\n    </div> \r\n);\r\n\r\n\r\nexport default Loader;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport classes from './WeatherToday.css';\r\nimport { fetchTodayWeather } from './../../actions/weather';\r\nimport Loader from './../../components/UI/Loader/Loader';\r\n\r\nclass WeatherToday extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTodayWeather(this.props.city);\r\n    }\r\n\r\n    showDate = (dateTime, timezone) => {\r\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n        const myShift = - new Date().getTimezoneOffset() / 60;\r\n        const cityShift = timezone / 3600;\r\n\r\n        return new Date(dateTime * 1000 - (myShift - cityShift)*1000*3600).toLocaleDateString('en-US', options);\r\n    }\r\n\r\n    renderTodayWeather() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <span className={classes.city}>\r\n                        {this.props.weather.name}\r\n                    </span>\r\n                    <small className={classes.date}>\r\n                        {this.showDate(this.props.weather.dt, this.props.weather.timezone)}\r\n                    </small>\r\n                    <img\r\n                        className={classes.conditionIcon}\r\n                        src={`http://openweathermap.org/img/wn/${this.props.weather.icon}@2x.png`}\r\n                        alt=\"Condition icon\"\r\n                    />\r\n                    <span className={classes.condition}>\r\n                        {this.props.weather.main}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <span className={classes.current}>\r\n                        {Math.round(this.props.weather.temp)}&deg;\r\n                    </span>\r\n                    <span className={classes.realFeels}>\r\n                        Real feels: {this.props.weather.feels_like}&deg;\r\n                    </span>\r\n                    <span className={classes.MaxMin}>\r\n                        {this.props.weather.temp_max}&deg; / {this.props.weather.temp_min}&deg;\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.props.error || !this.props.weather\r\n                        ? <Redirect to={'/'} />\r\n                        : null\r\n                }\r\n                <div className={classes.WeatherToday}>\r\n                    <h1>Today's weather</h1>\r\n                    {\r\n                        this.props.loading\r\n                            ? <Loader />\r\n                            : this.renderTodayWeather()\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        weather: state.weatherToday.weather,\r\n        city: state.weatherToday.city,\r\n        error: state.weatherToday.error.isError,\r\n        loading: state.weatherToday.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchTodayWeather: city => dispatch(fetchTodayWeather(city))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherToday);","const Auxiliary = props => props.children;\r\n\r\nexport default Auxiliary;","import React, { Component, Fragment } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchHourlyWeather } from '../../actions/weather';\r\nimport classes from './WeatherHourly.css';\r\nimport Loader from './../../components/UI/Loader/Loader';\r\nimport Button from './../../components/UI/Button/Button';\r\nimport { changeFilter } from './../../actions/filter';\r\nimport Auxiliary from './../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst btn = [\r\n    {\r\n        id: '12 hour',\r\n        value: 12\r\n    },\r\n    {\r\n        id: '36 hour',\r\n        value: 36\r\n    },\r\n    {\r\n        id: '48 hour',\r\n        value: 48\r\n    }\r\n]\r\n\r\nclass WeatherHourly extends Component {\r\n  \r\n    componentDidMount() {\r\n        this.props.fetchHourlyWeather();\r\n    }\r\n\r\n    showDate = dateTime => {\r\n        const options = { hour: 'numeric' };\r\n\r\n        const myShift = - new Date().getTimezoneOffset() / 60;\r\n        const cityShift = this.props.timezone / 3600;\r\n\r\n        return new Date(dateTime * 1000 - (myShift - cityShift)*1000*3600).toLocaleDateString('en-US', options).split(',')[1]\r\n    }\r\n\r\n    renderButtons () {\r\n        return btn.map((item, index) => {\r\n            return (\r\n                <Button\r\n                    key={item.id + index}\r\n                    value={item.value}\r\n                    disabled={false}\r\n                    onClick={() => this.props.changeFilter(item.value)}\r\n                >\r\n                    {item.id}\r\n                </Button>\r\n            );\r\n        });\r\n    }\r\n\r\n    renderHourly () {\r\n        return this.props.weather.map((item, index) => {\r\n            return (\r\n                <Auxiliary>\r\n                    {\r\n                        index < this.props.activFilter\r\n                            ? <div\r\n                                key={index}\r\n                                className={classes.WeatherHourly__item}\r\n                              >\r\n                                    <span>{this.showDate(item.dt)}</span>\r\n                                    <img\r\n                                        src={`http://openweathermap.org/img/wn/${item.icon}@2x.png`}\r\n                                        alt='Weather condition'\r\n                                    />\r\n                                    <span>{Math.round(item.temp)}&deg;</span>\r\n                              </div>\r\n                            : null\r\n                    }\r\n                </Auxiliary>\r\n            );\r\n        });\r\n    }\r\n\r\n    showCityName() {\r\n        if (!localStorage.getItem('city')) return localStorage.getItem('city');\r\n\r\n        return localStorage.getItem('city').split(' ').map(word => {\r\n            return word[0].toUpperCase() + word.slice(1);\r\n        }).join(' ');\r\n    }\r\n      \r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.props.error\r\n                        ? <Redirect to={'/'} />\r\n                        : null\r\n                }\r\n                <div className={classes.WeatherHourly}>\r\n                    <h1>Hourly weather</h1>\r\n                    <div className={classes.filterButtons}>                      \r\n                        {this.renderButtons()}\r\n                    </div>                  \r\n                    <h2 className={classes.cityName}>{this.showCityName()}</h2>\r\n                    <div>\r\n                        {\r\n                            this.props.loading\r\n                                ? <Loader />\r\n                                : this.renderHourly()\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        weather: state.weatherToday.weatherHourly,\r\n        timezone: state.weatherToday.timezone,\r\n        loading: state.weatherToday.loading,\r\n        error: state.weatherToday.error.isError,\r\n        activFilter: state.filter.activFilter\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchHourlyWeather: () => dispatch(fetchHourlyWeather()),\r\n        changeFilter: activFilter => dispatch(changeFilter(activFilter))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherHourly);","import { FILTER_HOURLY_WEATHER } from \"./actionTypes\";\r\n\r\nexport const changeFilter = activFilter => ({\r\n    type: FILTER_HOURLY_WEATHER,\r\n    activFilter\r\n});","import React, { Component, Fragment } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from './WeatherWeekly.css';\r\nimport { fetchWeeklyWeather } from './../../actions/weather';\r\nimport { connect } from 'react-redux';\r\nimport Loader from './../../components/UI/Loader/Loader';\r\n\r\nclass WeatherWeekly extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.fetchWeeklyWeather();\r\n    }\r\n\r\n    showDate = dateTime => {\r\n        const options = { weekday: 'long' };\r\n\r\n        const myShift = - new Date().getTimezoneOffset() / 60;\r\n        const cityShift = this.props.timezone / 3600;\r\n\r\n        return new Date(dateTime * 1000 - (myShift - cityShift)*1000*3600).toLocaleDateString('en-US', options)\r\n    }\r\n\r\n    renderWeekly() {\r\n        return this.props.weather.map((item, index) => {\r\n            return (\r\n                <div\r\n                    key={index}\r\n                    className={classes.WeatherWeekly__item}\r\n                >\r\n                    <span>{this.showDate(item.dt)}</span>\r\n                    <div>\r\n                        <img\r\n                            src={`http://openweathermap.org/img/wn/${item.icon}@2x.png`}\r\n                            alt='Weather condition'\r\n                        />\r\n                    </div>\r\n                    <span>{Math.round(item.max)}&deg;</span>\r\n                    <span>{Math.round(item.min)}&deg;</span>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    showCityName() {\r\n        if (!localStorage.getItem('city')) return localStorage.getItem('city');\r\n\r\n        return localStorage.getItem('city').split(' ').map(word => {\r\n            return word[0].toUpperCase() + word.slice(1);\r\n        }).join(' ');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.props.error\r\n                        ? <Redirect to={'/'} />\r\n                        : null\r\n                }\r\n                <div className={classes.WeatherWeekly}>\r\n                    <h1>Weekly weather</h1>\r\n                    <h2 className={classes.cityName}>{this.showCityName()}</h2>\r\n                    <div className={classes.description}>\r\n                        <span>Weekday</span>\r\n                        <span>Condition</span>\r\n                        <span>Max</span>\r\n                        <span>Min</span>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.props.loading\r\n                                ? <Loader />\r\n                                : this.renderWeekly()\r\n                        }                  \r\n                    </div>\r\n                </div>               \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        weather: state.weatherToday.weatherWeekly,\r\n        timezone: state.weatherToday.timezone,\r\n        loading: state.weatherToday.loading,\r\n        error: state.weatherToday.error.isError\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchWeeklyWeather: () => dispatch(fetchWeeklyWeather()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherWeekly);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport Main from './containers/Main/Main';\nimport WeatherToday from './containers/WeatherToday/WeatherToday';\nimport WeatherHourly from './containers/WeatherHourly/WeatherHourly';\nimport WeatherWeekly from './containers/WeatherWeekly/WeatherWeekly';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={'/weekly'} component={WeatherWeekly}/>\n        <Route path={'/hourly'} component={WeatherHourly}/>\n        <Route path={'/today'} component={WeatherToday}/>\n        <Route path={'/'} component={Main} />\n      </Switch>   \n    </Layout>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import {\r\n    FETCH_WEATHER_START,\r\n    FETCH_WEATHER_SUCCESS,\r\n    FETCH_WEATHER_ERROR,\r\n    FETCH_WEATHER_HOURLY_SUCCESS,\r\n    FETCH_WEATHER_HOURLY_ERROR,\r\n    FETCH_WEATHER_HOURLY_START,\r\n    FETCH_WEATHER_WEEKLY_START,\r\n    FETCH_WEATHER_WEEKLY_SUCCESS,\r\n    FETCH_WEATHER_WEEKLY_ERROR\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    city: null,\r\n    weather: {},\r\n    weatherHourly: [],\r\n    weatherWeekly: [],\r\n    timezone: null,\r\n    touched: false,\r\n    checkExisting: false,\r\n    error: {\r\n        message: null,\r\n        isError: false\r\n    },\r\n    loading: false,\r\n}\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_WEATHER_START:\r\n            return {\r\n                ...state,\r\n                city: action.city,\r\n                loading: true,\r\n            }\r\n        case FETCH_WEATHER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                weather: action.weather,\r\n                touched: true,\r\n                error: {\r\n                    isError: false\r\n                },\r\n                loading: false,\r\n            }\r\n        case FETCH_WEATHER_ERROR:\r\n            return {\r\n                ...state,\r\n                touched: true,\r\n                error: {\r\n                    message: action.error,\r\n                    isError: true\r\n                },\r\n                loading: false,\r\n            }\r\n        case FETCH_WEATHER_HOURLY_START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case FETCH_WEATHER_HOURLY_SUCCESS:            \r\n            return {\r\n                ...state,\r\n                weatherHourly: action.weatherHourly,\r\n                timezone: action.timezone,\r\n                error: {\r\n                    isError: false\r\n                },\r\n                loading: false,\r\n            }\r\n        case FETCH_WEATHER_HOURLY_ERROR:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    message: action.error,\r\n                    isError: true\r\n                },\r\n                loading: false,\r\n            }\r\n        case FETCH_WEATHER_WEEKLY_START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case FETCH_WEATHER_WEEKLY_SUCCESS:            \r\n            return {\r\n                ...state,\r\n                weatherWeekly: action.weatherWeekly,\r\n                timezone: action.timezone,\r\n                error: {\r\n                    isError: false\r\n                },\r\n                loading: false,\r\n            }\r\n        case FETCH_WEATHER_WEEKLY_ERROR:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    message: action.error,\r\n                    isError: true\r\n                },\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default weatherReducer;","\r\nimport { FILTER_HOURLY_WEATHER } from './../actions/actionTypes';\r\n\r\nconst initilaState = {\r\n    activFilter: 12\r\n}\r\n\r\nconst filterReducer = (state = initilaState, action) => {\r\n    switch (action.type) {\r\n        case FILTER_HOURLY_WEATHER:\r\n            return {\r\n                ...state,\r\n                activFilter: action.activFilter\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filterReducer;","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weather';\r\nimport filterReducer from './filter';\r\n\r\nconst rootReducer = combineReducers({ \r\n    weatherToday: weatherReducer,\r\n    filter: filterReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App.js';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}